{"ast":null,"code":"var _jsxFileName = \"/Users/apple/Desktop/study/javascripts-practice/reactpractice/src/\\bhook/UseRefEx.jsx\",\n  _s = $RefreshSig$();\nimport React, { useRef, useState } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst UseRefEx = () => {\n  _s();\n  const [state, setState] = useState(0);\n  const useref = useRef(0);\n  const increaseState = () => {\n    setState(state + 1);\n    setState(state => {\n      return state + 1;\n    });\n  };\n  const increaseRef = () => {\n    useref.current = useref + 2;\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"p\", {\n      children: [\"\\uD604\\uC81C state \\uAC12: \", state]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 17,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: [\"\\uD604\\uC81C useref\\uAC12: \", useref]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 18,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: increaseState\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 19,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: increaseRef\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 20,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 16,\n    columnNumber: 9\n  }, this);\n};\n\n//state값이 변화가 되면 랜더링이 새로 되는데. 값이 변화해도 랜더링이 필요없는 작업을 수행할때 사용을 한다.\n_s(UseRefEx, \"1kdfnJqCwXzY+zmsXhAhGqjQPz0=\");\n_c = UseRefEx;\nexport default UseRefEx;\nvar _c;\n$RefreshReg$(_c, \"UseRefEx\");","map":{"version":3,"names":["React","useRef","useState","jsxDEV","_jsxDEV","UseRefEx","_s","state","setState","useref","increaseState","increaseRef","current","children","fileName","_jsxFileName","lineNumber","columnNumber","onClick","_c","$RefreshReg$"],"sources":["/Users/apple/Desktop/study/javascripts-practice/reactpractice/src/\bhook/UseRefEx.jsx"],"sourcesContent":["import React, { useRef, useState } from \"react\";\n\nconst UseRefEx=()=>{\n    const [state, setState] = useState(0);\n    const useref = useRef(0);\n    const increaseState=()=>{\n        setState(state+1);\n        setState((state)=>{\n            return state+1;\n        });\n    };\n    const increaseRef=()=>{\n        useref.current = useref+2;\n    };\n    return(\n        <div>\n            <p>현제 state 값: {state}</p>\n            <p>현제 useref값: {useref}</p>\n            <button onClick={increaseState}></button>\n            <button onClick={increaseRef}></button>\n        </div>\n    );\n};\n\n//state값이 변화가 되면 랜더링이 새로 되는데. 값이 변화해도 랜더링이 필요없는 작업을 수행할때 사용을 한다.\n\nexport default UseRefEx;"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,MAAM,EAAEC,QAAQ,QAAQ,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEhD,MAAMC,QAAQ,GAACA,CAAA,KAAI;EAAAC,EAAA;EACf,MAAM,CAACC,KAAK,EAAEC,QAAQ,CAAC,GAAGN,QAAQ,CAAC,CAAC,CAAC;EACrC,MAAMO,MAAM,GAAGR,MAAM,CAAC,CAAC,CAAC;EACxB,MAAMS,aAAa,GAACA,CAAA,KAAI;IACpBF,QAAQ,CAACD,KAAK,GAAC,CAAC,CAAC;IACjBC,QAAQ,CAAED,KAAK,IAAG;MACd,OAAOA,KAAK,GAAC,CAAC;IAClB,CAAC,CAAC;EACN,CAAC;EACD,MAAMI,WAAW,GAACA,CAAA,KAAI;IAClBF,MAAM,CAACG,OAAO,GAAGH,MAAM,GAAC,CAAC;EAC7B,CAAC;EACD,oBACIL,OAAA;IAAAS,QAAA,gBACIT,OAAA;MAAAS,QAAA,GAAG,6BAAY,EAACN,KAAK;IAAA;MAAAO,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,eAC1Bb,OAAA;MAAAS,QAAA,GAAG,6BAAY,EAACJ,MAAM;IAAA;MAAAK,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,eAC3Bb,OAAA;MAAQc,OAAO,EAAER;IAAc;MAAAI,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAS,CAAC,eACzCb,OAAA;MAAQc,OAAO,EAAEP;IAAY;MAAAG,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAS,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACtC,CAAC;AAEd,CAAC;;AAED;AAAAX,EAAA,CAtBMD,QAAQ;AAAAc,EAAA,GAARd,QAAQ;AAwBd,eAAeA,QAAQ;AAAC,IAAAc,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}